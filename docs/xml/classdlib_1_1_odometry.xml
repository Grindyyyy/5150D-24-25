<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="classdlib_1_1_odometry" kind="class" language="C++" prot="public">
    <compoundname>dlib::Odometry</compoundname>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classdlib_1_1_odometry_1af6feb429804af618d1a62137e9096ba5" prot="protected" static="no" mutable="no">
        <type><ref refid="structdlib_1_1_pose2d" kindref="compound">Pose2d</ref></type>
        <definition>Pose2d dlib::Odometry::position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <qualifiedname>dlib::Odometry::position</qualifiedname>
        <initializer>= <ref refid="structdlib_1_1_pose2d" kindref="compound">Pose2d</ref>(au::ZERO, au::ZERO, au::ZERO)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" line="45" column="12" bodyfile="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlib_1_1_odometry_1a38e24c50f810fa9c066324b74af6ba3a" prot="protected" static="no" mutable="no">
        <type>au::Quantity&lt; au::Meters, double &gt;</type>
        <definition>au::Quantity&lt;au::Meters, double&gt; dlib::Odometry::previous_forward</definition>
        <argsstring></argsstring>
        <name>previous_forward</name>
        <qualifiedname>dlib::Odometry::previous_forward</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" line="46" column="18" bodyfile="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdlib_1_1_odometry_1a411dfb75318be6becef169a2a5534c37" prot="protected" static="no" mutable="no">
        <type>au::Quantity&lt; au::Radians, double &gt;</type>
        <definition>au::Quantity&lt;au::Radians, double&gt; dlib::Odometry::previous_theta</definition>
        <argsstring></argsstring>
        <name>previous_theta</name>
        <qualifiedname>dlib::Odometry::previous_theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" line="47" column="18" bodyfile="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classdlib_1_1_odometry_1ae3510ed2cba57abce9899e9811b20f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dlib::Odometry::Odometry</definition>
        <argsstring>()</argsstring>
        <name>Odometry</name>
        <qualifiedname>dlib::Odometry::Odometry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" line="30" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdlib_1_1_odometry_1aa243533628d02ebd8ea4b1356b749f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dlib::Odometry::update</definition>
        <argsstring>(au::Quantity&lt; au::Meters, double &gt; left_displacement, au::Quantity&lt; au::Meters, double &gt; right_displacement, au::Quantity&lt; au::Degrees, double &gt; heading)</argsstring>
        <name>update</name>
        <qualifiedname>dlib::Odometry::update</qualifiedname>
        <param>
          <type>au::Quantity&lt; au::Meters, double &gt;</type>
          <declname>left_displacement</declname>
        </param>
        <param>
          <type>au::Quantity&lt; au::Meters, double &gt;</type>
          <declname>right_displacement</declname>
        </param>
        <param>
          <type>au::Quantity&lt; au::Degrees, double &gt;</type>
          <declname>heading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" line="32" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdlib_1_1_odometry_1aff1bcf403d9f255dbb0a39212779ed0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structdlib_1_1_pose2d" kindref="compound">Pose2d</ref></type>
        <definition>Pose2d dlib::Odometry::get_position</definition>
        <argsstring>()</argsstring>
        <name>get_position</name>
        <qualifiedname>dlib::Odometry::get_position</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" line="38" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classdlib_1_1_odometry_1a5801fa35c62bf3a3840e2948e1a6a8d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dlib::Odometry::set_position</definition>
        <argsstring>(Pose2d pose)</argsstring>
        <name>set_position</name>
        <qualifiedname>dlib::Odometry::set_position</qualifiedname>
        <param>
          <type><ref refid="structdlib_1_1_pose2d" kindref="compound">Pose2d</ref></type>
          <declname>pose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" line="39" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdlib_1_1_odometry_1ab8b38f9263c17be3b2e7772335d573a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>au::Quantity&lt; au::Meters, double &gt;</type>
        <definition>au::Quantity&lt; au::Meters, double &gt; dlib::Odometry::displacement_to</definition>
        <argsstring>(Vector2d point, bool reverse=false)</argsstring>
        <name>displacement_to</name>
        <qualifiedname>dlib::Odometry::displacement_to</qualifiedname>
        <param>
          <type><ref refid="structdlib_1_1_vector2d" kindref="compound">Vector2d</ref></type>
          <declname>point</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reverse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" line="41" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classdlib_1_1_odometry_1a9067660c8b02733adfc49e18007b2238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>au::Quantity&lt; au::Degrees, double &gt;</type>
        <definition>au::Quantity&lt; au::Degrees, double &gt; dlib::Odometry::angle_to</definition>
        <argsstring>(Vector2d point, bool reverse=false)</argsstring>
        <name>angle_to</name>
        <qualifiedname>dlib::Odometry::angle_to</qualifiedname>
        <param>
          <type><ref refid="structdlib_1_1_vector2d" kindref="compound">Vector2d</ref></type>
          <declname>point</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reverse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" line="42" column="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>dlib::Odometry</label>
        <link refid="classdlib_1_1_odometry"/>
        <childnode refid="2" relation="usage">
          <edgelabel>position</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>dlib::Pose2d</label>
        <link refid="structdlib_1_1_pose2d"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" line="28" column="1" bodyfile="C:/Users/super/Downloads/dLib2/dlib2/dlib2/include/dlib/kinematics/odometry.hpp" bodystart="28" bodyend="48"/>
    <listofallmembers>
      <member refid="classdlib_1_1_odometry_1a9067660c8b02733adfc49e18007b2238" prot="public" virt="non-virtual"><scope>dlib::Odometry</scope><name>angle_to</name></member>
      <member refid="classdlib_1_1_odometry_1ab8b38f9263c17be3b2e7772335d573a6" prot="public" virt="non-virtual"><scope>dlib::Odometry</scope><name>displacement_to</name></member>
      <member refid="classdlib_1_1_odometry_1aff1bcf403d9f255dbb0a39212779ed0c" prot="public" virt="non-virtual"><scope>dlib::Odometry</scope><name>get_position</name></member>
      <member refid="classdlib_1_1_odometry_1ae3510ed2cba57abce9899e9811b20f97" prot="public" virt="non-virtual"><scope>dlib::Odometry</scope><name>Odometry</name></member>
      <member refid="classdlib_1_1_odometry_1af6feb429804af618d1a62137e9096ba5" prot="protected" virt="non-virtual"><scope>dlib::Odometry</scope><name>position</name></member>
      <member refid="classdlib_1_1_odometry_1a38e24c50f810fa9c066324b74af6ba3a" prot="protected" virt="non-virtual"><scope>dlib::Odometry</scope><name>previous_forward</name></member>
      <member refid="classdlib_1_1_odometry_1a411dfb75318be6becef169a2a5534c37" prot="protected" virt="non-virtual"><scope>dlib::Odometry</scope><name>previous_theta</name></member>
      <member refid="classdlib_1_1_odometry_1a5801fa35c62bf3a3840e2948e1a6a8d5" prot="public" virt="non-virtual"><scope>dlib::Odometry</scope><name>set_position</name></member>
      <member refid="classdlib_1_1_odometry_1aa243533628d02ebd8ea4b1356b749f58" prot="public" virt="non-virtual"><scope>dlib::Odometry</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
